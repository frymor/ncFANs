#!/usr/bin/perl

=head1 NAME

goplot.pl - Plot go term p-value for lincRNAs.

=head1 SYNOPSIS

Use:

    perl goplot.pl  -f <gene.txt> -o <output.jpg> -t 10

Examples:

    perl goplot.pl --help

    perl goplot.pl -f gene.txt -o gene.txt.jpg -t 10


=head1 DESCRIPTION

This script is part of the ncFANs pipeline. It takes the function prediction
result file for on lincRNA as input and plots go term -log10(p-value).

=head1 ARGUMENTS

goplot.pl takes the following arguments:

=over 4

=item gene.txt

  -f <gene.txt>
 
(Optional.) The path of GO enrichment file generated by module-based or hub-based
method.

=item output file 
  
  -o <output.jpg>

(Optional.) The path of output file. Default is "gene.txt.jpg".

=item top

  -t 

(Optional.) Plot the top t GO terms. Default is 10, at most 20;

=item help

  --help

(Optional.) Displays the usage message.

=back

=head1 AUTHOR

Li Ming, E<lt>liming@bioinfo.ac.cnE<gt>.

=head1 COPYRIGHT

This program is distributed under the Artistic License.

=head1 DATE

28-Feb-2014

=cut

use warnings;
use strict;
use Getopt::Long;
use Pod::Usage;      #   Ditto!
use POSIX;

my ($file, $output, $top, $help);

GetOptions(
    'f=s'       => \$file,
    'o=s'       => \$output,
    't=i'       => \$top,
    'help'      => \$help);

#   Check for requests for help or for man (full documentation):

pod2usage(-verbose => 1) if ($help);

#   Check for required variables.

unless (defined($file))
{
    pod2usage(-exitstatus => 2);
}

unless (defined($output)) {
    $output =  $file . ".jpg";
}

if (defined($top)) {
    if ($top < 0 || $top > 20) {
        my $message = "Value \"$top\" invalid for option t. (integer in [1, 20] expected)";
        pod2usage(-msg => $message,
                  -exitstatus => 2);
    }
} else {
    $top = 10;
}


system("R --slave --args $file $output $top < Rs/goplot.R");
exit(0);
